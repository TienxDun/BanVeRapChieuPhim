@model CinemaManagement.ViewModels.ThanhToanViewModel
@{
    ViewData["Title"] = "Thanh Toán";
}

@if (Model == null)
{
    <div class="alert alert-danger">
        <h4>Lỗi dữ liệu</h4>
        <p>Không có dữ liệu thanh toán. Vui lòng quay lại và chọn ghế.</p>
        <a href="@Url.Action("Index")" class="btn btn-primary">Quay lại trang chính</a>
    </div>
    return;
}

@if (Model.LichChieu == null)
{
    <div class="alert alert-warning">
        <h4>Thiếu thông tin lịch chiếu</h4>
        <p>Không tìm thấy thông tin lịch chiếu. Vui lòng thử lại.</p>
        <a href="@Url.Action("Index")" class="btn btn-primary">Quay lại trang chính</a>
    </div>
    return;
}

@if (!Model.DanhSachGheDuocChon.Any())
{
    <div class="alert alert-warning">
        <h4>Chưa chọn ghế</h4>
        <p>Không có ghế nào được chọn. Vui lòng quay lại và chọn ghế.</p>
        <a href="@Url.Action("ChonGhe", new { id = Model.LichChieu.MaLichChieu })" class="btn btn-primary">Chọn ghế</a>
    </div>
    return;
}

<!-- Debug info (remove in production) -->
<div class="alert alert-info d-none" id="debugInfo">
    <strong>Debug Info:</strong>
    <br>Original Total: @Model.TongTien
    <br>Session: <span id="sessionInfo">Checking...</span>
</div>

<div class="row">
    <div class="col-lg-8">
        <!-- Thông tin đặt vé -->
        <div class="card mb-4 fade-in">
            <div class="card-header">
                <h5 class="mb-0">
                    <i class="fas fa-info-circle me-2"></i>
                    Thông tin đặt vé
                </h5>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6">
                        <h6>@Model.LichChieu.Phim.TenPhim</h6>
                        <p class="text-muted mb-1">
                            <i class="fas fa-door-open me-2"></i>
                            @Model.LichChieu.PhongChieu.TenPhong (@Model.LichChieu.PhongChieu.LoaiPhong)
                        </p>
                        <p class="text-muted mb-1">
                            <i class="fas fa-calendar me-2"></i>
                            @Model.LichChieu.ThoiGianBatDau.ToString("dd/MM/yyyy")
                        </p>
                        <p class="text-muted">
                            <i class="fas fa-clock me-2"></i>
                            @Model.LichChieu.ThoiGianBatDau.ToString("HH:mm") - @Model.LichChieu.ThoiGianKetThuc.ToString("HH:mm")
                        </p>
                    </div>
                    <div class="col-md-6">
                        <h6>Ghế đã chọn:</h6>
                        <div class="d-flex flex-wrap gap-2">
                            @foreach (var ghe in Model.DanhSachGheDuocChon)
                            {
                                <span class="badge bg-primary">
                                    @ghe.SoGhe
                                    <small>(@ghe.LoaiGhe - @ghe.GiaGhe.ToString("N0") ₫)</small>
                                </span>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Thông tin khách hàng -->
        <div class="card mb-4 fade-in">
            <div class="card-header">
                <h5 class="mb-0">
                    <i class="fas fa-user me-2"></i>
                    Thông tin khách hàng
                </h5>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label for="customerSearch" class="form-label">Tìm khách hàng</label>
                            <div class="input-group">
                                <input type="text" class="form-control" id="customerSearch" 
                                       placeholder="Nhập SĐT hoặc mã khách hàng">
                                <button class="btn btn-outline-primary" type="button" id="searchBtn">
                                    <i class="fas fa-search"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div id="customerInfo" class="d-none">
                            <h6 id="customerName"></h6>
                            <p class="text-muted mb-1" id="customerPhone"></p>
                            <p class="text-muted" id="customerPoints"></p>
                            <input type="hidden" id="customerId" value="">
                        </div>
                        <div id="noCustomer" class="text-muted">
                            <p>Khách lẻ - không tích điểm</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Voucher giảm giá -->
        <div class="card fade-in">
            <div class="card-header">
                <h5 class="mb-0">
                    <i class="fas fa-ticket-alt me-2"></i>
                    Voucher giảm giá
                </h5>
            </div>
            <div class="card-body">
                @if (Model.DanhSachVoucherKhaDung.Any())
                {
                    <div class="row">
                        @foreach (var voucher in Model.DanhSachVoucherKhaDung)
                        {
                            <div class="col-md-6 mb-3">
                                <div class="card voucher-card" data-voucher-id="@voucher.MaGiamGia">
                                    <div class="card-body">
                                        <div class="d-flex justify-content-between align-items-start">
                                            <div>
                                                <h6 class="card-title">@voucher.TenGiamGia</h6>
                                                <p class="card-text text-muted">@voucher.MoTa</p>
                                                <small class="text-muted">
                                                    Hết hạn: @voucher.ThoiGianKetThuc.ToString("dd/MM/yyyy")
                                                </small>
                                            </div>
                                            <div class="text-end">
                                                <span class="badge bg-success">-@voucher.PhanTramGiam%</span>
                                                <div class="form-check mt-2">
                                                    <input class="form-check-input voucher-radio" type="radio" 
                                                           name="voucherSelect" value="@voucher.MaGiamGia" 
                                                           id="voucher_@voucher.MaGiamGia">
                                                    <label class="form-check-label" for="voucher_@voucher.MaGiamGia">
                                                        Chọn
                                                    </label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                    <div class="text-center">
                        <button type="button" class="btn btn-outline-secondary" id="clearVoucherBtn">
                            <i class="fas fa-times me-1"></i>Không sử dụng voucher
                        </button>
                    </div>
                }
                else
                {
                    <div class="text-center text-muted">
                        <i class="fas fa-ticket-alt fa-3x mb-3"></i>
                        <p>Không có voucher khả dụng</p>
                    </div>
                }
            </div>
        </div>
    </div>

    <div class="col-lg-4">
        <!-- Tóm tắt thanh toán -->
        <div class="card fade-in sticky-top" style="top: 20px;">
            <div class="card-header">
                <h5 class="mb-0">
                    <i class="fas fa-calculator me-2"></i>
                    Tóm tắt thanh toán
                </h5>
            </div>
            <div class="card-body">
                <div class="d-flex justify-content-between mb-2">
                    <span>Tổng tiền:</span>
                    <span id="subtotal">@Model.TongTien.ToString("N0") ₫</span>
                </div>
                <div class="d-flex justify-content-between mb-2" id="discountRow" style="display: none;">
                    <span>Giảm giá:</span>
                    <span class="text-success" id="discountAmount">0 ₫</span>
                </div>
                <hr>
                <div class="d-flex justify-content-between mb-3">
                    <strong>Thành tiền:</strong>
                    <strong class="text-primary" id="finalTotal">@Model.TongTien.ToString("N0") ₫</strong>
                </div>

                <div class="d-grid gap-2">
                    <button type="button" class="btn btn-primary btn-lg" id="confirmPaymentBtn">
                        <i class="fas fa-credit-card me-2"></i>
                        Xác nhận thanh toán
                    </button>
                    <a href="@Url.Action("ChonGhe", new { id = Model.LichChieu.MaLichChieu })" 
                       class="btn btn-outline-secondary">
                        <i class="fas fa-arrow-left me-1"></i>Quay lại chọn ghế
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Loading Modal -->
<div class="modal fade" id="loadingModal" tabindex="-1" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-body text-center py-4">
                <div class="spinner-border text-primary mb-3" role="status">
                    <span class="visually-hidden">Đang xử lý...</span>
                </div>
                <h5>Đang xử lý thanh toán...</h5>
                <p class="text-muted">Vui lòng đợi trong giây lát</p>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            console.log('ThanhToan page loaded');
            
            // Check if jQuery is loaded
            if (typeof $ === 'undefined') {
                console.error('jQuery is not loaded!');
                alert('jQuery không được tải! Trang có thể không hoạt động đúng.');
                return;
            }
            
            // Check if Model data is available
            console.log('Model data check:');
            console.log('- TongTien:', @Model.TongTien.ToString(System.Globalization.CultureInfo.InvariantCulture));
            console.log('- LichChieu:', @Html.Raw(Json.Serialize(Model.LichChieu != null ? new { 
                MaLichChieu = Model.LichChieu.MaLichChieu, 
                TenPhim = Model.LichChieu.Phim?.TenPhim,
                TenPhong = Model.LichChieu.PhongChieu?.TenPhong
            } : null)));
            console.log('- DanhSachGheDuocChon count:', @Model.DanhSachGheDuocChon.Count);
            console.log('- DanhSachVoucherKhaDung count:', @Model.DanhSachVoucherKhaDung.Count);

            var originalTotal = @Model.TongTien.ToString(System.Globalization.CultureInfo.InvariantCulture);
            var currentDiscount = 0;
            var selectedVoucher = '';
            var selectedCustomer = '';

            // Helper function to safely parse numbers from server
            function parseServerNumber(value) {
                if (typeof value === 'string') {
                    return parseFloat(value.replace(',', '.'));
                }
                return parseFloat(value) || 0;
            }

            console.log('Payment page initialized with total:', originalTotal);

            // Test database connection first
            $.get('@Url.Action("TestDatabase", "BanVe")')
            .done(function(response) {
                console.log('Database test result:', response);
                if (!response.success) {
                    showErrorMessage('Lỗi kết nối cơ sở dữ liệu: ' + response.message);
                }
            })
            .fail(function(xhr) {
                console.error('Database test failed:', xhr);
                showErrorMessage('Không thể kiểm tra kết nối cơ sở dữ liệu');
            });

            // Debug: Check if we're in debug mode
            if (window.location.search.includes('debug=true')) {
                $('#debugInfo').removeClass('d-none');
                $('#sessionInfo').text('Debug mode enabled');
            }

            // Initialize payment summary
            updatePaymentSummary();

            // Tìm khách hàng
            $('#searchBtn').click(function() {
                var searchValue = $('#customerSearch').val().trim();
                if (!searchValue) {
                    showErrorMessage('Vui lòng nhập số điện thoại hoặc mã khách hàng');
                    return;
                }

                // Show loading state
                $('#searchBtn').prop('disabled', true).html('<i class="fas fa-spinner fa-spin"></i>');

                var searchParams = {};
                if (isNaN(searchValue)) {
                    searchParams.maKH = searchValue;
                } else {
                    searchParams.sdt = searchValue;
                }
                
                console.log('Searching customer with params:', searchParams);

                $.get('@Url.Action("TimKhachHang", "BanVe")', searchParams)
                .done(function(response) {
                    if (response.success) {
                        var customer = response.khachHang;
                        $('#customerName').text(customer.hoTen);
                        $('#customerPhone').text('SĐT: ' + customer.sdt);
                        $('#customerPoints').html('<i class="fas fa-star text-warning me-1"></i>Điểm tích lũy: ' + customer.diemTichLuy);
                        $('#customerId').val(customer.maKhachHang);
                        $('#customerInfo').removeClass('d-none');
                        $('#noCustomer').addClass('d-none');
                        selectedCustomer = customer.maKhachHang;
                        
                        // Show success message
                        showInfoMessage('Đã tìm thấy khách hàng: ' + customer.hoTen);
                    } else {
                        showErrorMessage(response.message || 'Không tìm thấy khách hàng');
                        resetCustomerInfo();
                    }
                })
                .fail(function() {
                    showErrorMessage('Có lỗi xảy ra khi tìm kiếm khách hàng');
                    resetCustomerInfo();
                })
                .always(function() {
                    // Reset button state
                    $('#searchBtn').prop('disabled', false).html('<i class="fas fa-search"></i>');
                });
            });

            function resetCustomerInfo() {
                $('#customerInfo').addClass('d-none');
                $('#noCustomer').removeClass('d-none');
                $('#customerId').val('');
                selectedCustomer = '';
            }

            function showInfoMessage(message) {
                var alertHtml = `
                    <div class="alert alert-info alert-dismissible fade show" role="alert">
                        <i class="fas fa-info-circle me-2"></i>
                        ${message}
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    </div>
                `;
                
                // Remove existing alerts
                $('.alert').remove();
                $('.card:first').before(alertHtml);
                
                // Auto remove after 3 seconds
                setTimeout(function() {
                    $('.alert').fadeOut();
                }, 3000);
            }

            // Xử lý voucher
            $('.voucher-radio').change(function() {
                if (this.checked) {
                    selectedVoucher = $(this).val();
                    var voucherCard = $(this).closest('.voucher-card');
                    
                    // Visual feedback
                    $('.voucher-card').removeClass('selected');
                    voucherCard.addClass('selected');
                    
                    calculateDiscount();
                }
            });

            $('#clearVoucherBtn').click(function() {
                $('.voucher-radio').prop('checked', false);
                $('.voucher-card').removeClass('selected');
                selectedVoucher = '';
                calculateDiscount();
                showInfoMessage('Đã bỏ chọn voucher');
            });

            function calculateDiscount() {
                if (!selectedVoucher) {
                    currentDiscount = 0;
                    updatePaymentSummary();
                    return;
                }

                // Show loading state for calculation
                $('#discountAmount').html('<i class="fas fa-spinner fa-spin"></i>');

                var voucherData = {
                    maVoucher: selectedVoucher,
                    tongTien: originalTotal
                };
                
                console.log('Calculating discount with:', voucherData);

                $.ajax({
                    url: '@Url.Action("TinhTienGiamGia", "BanVe")',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(voucherData),
                    success: function(response) {
                        if (response.success) {
                            currentDiscount = response.tienGiamGia;
                            updatePaymentSummary();
                            
                            if (currentDiscount > 0) {
                                showInfoMessage('Áp dụng voucher thành công! Giảm ' + formatCurrency(currentDiscount));
                            }
                        } else {
                            showErrorMessage(response.message || 'Voucher không hợp lệ');
                            $('.voucher-radio[value="' + selectedVoucher + '"]').prop('checked', false);
                            $('.voucher-card').removeClass('selected');
                            selectedVoucher = '';
                            currentDiscount = 0;
                            updatePaymentSummary();
                        }
                    },
                    error: function() {
                        showErrorMessage('Có lỗi xảy ra khi tính giảm giá');
                        currentDiscount = 0;
                        updatePaymentSummary();
                    }
                });
            }

            function updatePaymentSummary() {
                try {
                    var finalTotal = originalTotal - currentDiscount;
                    
                    $('#subtotal').text(formatCurrency(originalTotal));
                    $('#discountAmount').text('-' + formatCurrency(currentDiscount));
                    $('#finalTotal').text(formatCurrency(finalTotal));
                    
                    if (currentDiscount > 0) {
                        $('#discountRow').show();
                    } else {
                        $('#discountRow').hide();
                    }
                    
                    console.log('Payment summary updated:', {
                        original: originalTotal,
                        discount: currentDiscount,
                        final: finalTotal
                    });
                } catch (error) {
                    console.error('Error updating payment summary:', error);
                }
            }

            // Xác nhận thanh toán
            $('#confirmPaymentBtn').click(function() {
                var finalAmount = originalTotal - currentDiscount;
                var confirmMessage = 'Bạn có chắc chắn muốn thanh toán ' + formatCurrency(finalAmount) + ' không?';
                
                if (selectedCustomer && currentDiscount > 0) {
                    confirmMessage += '\n\nThông tin:\n';
                    confirmMessage += '- Khách hàng: ' + $('#customerName').text() + '\n';
                    confirmMessage += '- Voucher giảm: ' + formatCurrency(currentDiscount) + '\n';
                    confirmMessage += '- Thành tiền: ' + formatCurrency(finalAmount);
                } else if (selectedCustomer) {
                    confirmMessage += '\n\nKhách hàng: ' + $('#customerName').text();
                } else if (currentDiscount > 0) {
                    confirmMessage += '\n\nVoucher giảm: ' + formatCurrency(currentDiscount);
                }
                
                if (confirm(confirmMessage)) {
                    // Disable button to prevent double-click
                    $('#confirmPaymentBtn').prop('disabled', true).html('<i class="fas fa-spinner fa-spin me-2"></i>Đang xử lý...');
                    $('#loadingModal').modal('show');
                    
                    var requestData = {
                        maKhachHang: selectedCustomer || null,
                        voucherDuocChon: selectedVoucher || null,
                        tongTien: originalTotal,
                        tienGiamGia: currentDiscount,
                        thanhTien: finalAmount
                    };
                    
                    console.log('Sending payment request:', requestData);
                    
                    $.ajax({
                        url: '@Url.Action("XacNhanThanhToan", "BanVe")',
                        type: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify(requestData),
                        success: function(response) {
                            console.log('Payment response:', response);
                            $('#loadingModal').modal('hide');
                            if (response.success) {
                                // Show success message with custom styling
                                showSuccessMessage(response.message, function() {
                                    window.location.href = response.redirectUrl;
                                });
                            } else {
                                showErrorMessage(response.message);
                                resetPaymentButton();
                            }
                        },
                        error: function(xhr, status, error) {
                            console.error('Payment error:', xhr.responseText);
                            $('#loadingModal').modal('hide');
                            showErrorMessage('Có lỗi xảy ra khi xử lý thanh toán: ' + (xhr.responseJSON?.message || error));
                            resetPaymentButton();
                        }
                    });
                }
            });

            function resetPaymentButton() {
                $('#confirmPaymentBtn').prop('disabled', false).html('<i class="fas fa-credit-card me-2"></i>Xác nhận thanh toán');
            }

            function showSuccessMessage(message, callback) {
                // Create custom success modal
                var successModal = `
                    <div class="modal fade" id="successModal" tabindex="-1" data-bs-backdrop="static" data-bs-keyboard="false">
                        <div class="modal-dialog modal-dialog-centered">
                            <div class="modal-content">
                                <div class="modal-body text-center py-4">
                                    <div class="text-success mb-3">
                                        <i class="fas fa-check-circle fa-4x"></i>
                                    </div>
                                    <h4 class="text-success mb-3">Thanh toán thành công!</h4>
                                    <p class="mb-3">${message}</p>
                                    <p class="text-muted">Đang chuyển đến trang hóa đơn...</p>
                                    <div class="progress" style="height: 4px;">
                                        <div class="progress-bar bg-success" role="progressbar" style="width: 0%"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                `;
                
                $('body').append(successModal);
                $('#successModal').modal('show');
                
                // Animate progress bar
                var progress = 0;
                var interval = setInterval(function() {
                    progress += 10;
                    $('#successModal .progress-bar').css('width', progress + '%');
                    if (progress >= 100) {
                        clearInterval(interval);
                        setTimeout(function() {
                            $('#successModal').modal('hide');
                            callback();
                        }, 500);
                    }
                }, 100);
            }

            function showErrorMessage(message) {
                // Show error message with better styling
                var alertHtml = `
                    <div class="alert alert-danger alert-dismissible fade show" role="alert">
                        <i class="fas fa-exclamation-triangle me-2"></i>
                        <strong>Lỗi!</strong> ${message}
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    </div>
                `;
                
                // Remove existing alerts
                $('.alert').remove();
                
                // Add new alert at the top
                $('.card:first').before(alertHtml);
                
                // Auto remove after 5 seconds
                setTimeout(function() {
                    $('.alert').fadeOut();
                }, 5000);
                
                // Scroll to top to show the error
                $('html, body').animate({ scrollTop: 0 }, 300);
            }

            // Format currency with better error handling
            function formatCurrency(amount) {
                try {
                    if (isNaN(amount) || amount === null || amount === undefined) {
                        return '0 ₫';
                    }
                    return new Intl.NumberFormat('vi-VN', {
                        style: 'currency',
                        currency: 'VND'
                    }).format(amount);
                } catch (error) {
                    console.error('Currency formatting error:', error);
                    return amount.toLocaleString() + ' ₫';
                }
            }

            // Allow enter key for search
            $('#customerSearch').keypress(function(e) {
                if (e.which === 13) {
                    $('#searchBtn').click();
                }
            });
        });
    </script>

    <style>
        .voucher-card {
            cursor: pointer;
            transition: all 0.3s ease;
            border: 2px solid transparent;
        }
        
        .voucher-card:hover {
            border-color: var(--primary-color);
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        }
        
        .voucher-card.selected {
            border-color: var(--primary-color);
            background-color: var(--light-blue);
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(0, 119, 190, 0.2);
        }
        
        .voucher-radio:checked + label {
            font-weight: bold;
            color: var(--primary-color);
        }
        
        .badge {
            font-size: 0.75rem;
        }
        
        #customerInfo {
            background-color: var(--light-blue);
            padding: 15px;
            border-radius: 8px;
            border-left: 4px solid var(--primary-color);
        }
        
        #customerInfo h6 {
            color: var(--primary-color);
            margin-bottom: 5px;
        }
        
        .sticky-top {
            z-index: 1020;
        }
        
        .progress {
            background-color: rgba(0, 0, 0, 0.1);
        }
        
        /* Loading states */
        .btn:disabled {
            opacity: 0.7;
        }
        
        /* Alert animations */
        .alert {
            animation: slideInDown 0.3s ease-out;
        }
        
        @@keyframes slideInDown {
            from {
                transform: translateY(-100%);
                opacity: 0;
            }
            to {
                transform: translateY(0);
                opacity: 1;
            }
        }
        
        /* Custom scrollbar for payment summary */
        .card-body {
            max-height: 80vh;
            overflow-y: auto;
        }
        
        .card-body::-webkit-scrollbar {
            width: 6px;
        }
        
        .card-body::-webkit-scrollbar-track {
            background: #f1f1f1;
            border-radius: 3px;
        }
        
        .card-body::-webkit-scrollbar-thumb {
            background: var(--primary-color);
            border-radius: 3px;
        }
        
        /* Responsive improvements */
        @@media (max-width: 768px) {
            .sticky-top {
                position: relative !important;
                top: auto !important;
            }
            
            .voucher-card {
                margin-bottom: 1rem;
            }
        }
        
        /* Highlight selected seats */
        .badge.bg-primary {
            background: linear-gradient(45deg, var(--primary-color), var(--secondary-color)) !important;
            box-shadow: 0 2px 4px rgba(0, 119, 190, 0.3);
        }
        
        /* Payment summary enhancements */
        #finalTotal {
            font-size: 1.25rem;
            font-weight: bold;
        }
        
        #discountRow {
            color: var(--success-color);
            font-weight: 500;
        }
    </style>
}
