@model CinemaManagement.ViewModels.KhachHangChonGheViewModel
@{
    ViewData["Title"] = "Chọn ghế - " + Model.LichChieu.Phim.TenPhim;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid">
    <!-- Thông tin suất chiếu -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-8">
                            <h4>@Model.LichChieu.Phim.TenPhim</h4>
                            <p class="mb-1">
                                <i class="fas fa-map-marker-alt me-1"></i>
                                <strong>Phòng:</strong> @Model.LichChieu.PhongChieu.TenPhong
                            </p>
                            <p class="mb-1">
                                <i class="fas fa-clock me-1"></i>
                                <strong>Giờ chiếu:</strong> @Model.LichChieu.ThoiGianBatDau.ToString("dd/MM/yyyy HH:mm")
                            </p>
                            <p class="mb-0">
                                <i class="fas fa-money-bill-wave me-1"></i>
                                <strong>Giá vé:</strong> <span class="text-success fw-bold">@Model.LichChieu.Gia.ToString("N0") VNĐ</span>
                            </p>
                        </div>
                        <div class="col-md-4 text-end">
                            <a href="@Url.Action("ChiTietPhim", new { id = Model.LichChieu.MaPhim })" 
                               class="btn btn-outline-secondary">
                                <i class="fas fa-arrow-left me-1"></i>Quay lại
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Màn hình -->
    <div class="row mb-3">
        <div class="col-12 text-center">
            <div class="bg-dark text-white p-2 rounded mx-auto" style="max-width: 300px;">
                <i class="fas fa-tv me-1"></i>MÀN HÌNH
            </div>
        </div>
    </div>

    <!-- Sơ đồ ghế -->
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <div class="row mb-3">
                        <div class="col-12">
                            <!-- Chú thích -->
                            <div class="d-flex justify-content-center gap-4 mb-3">
                                <div class="d-flex align-items-center">
                                    <div class="seat available me-2"></div>
                                    <span>Trống</span>
                                </div>
                                <div class="d-flex align-items-center">
                                    <div class="seat occupied me-2"></div>
                                    <span>Đã đặt</span>
                                </div>
                                <div class="d-flex align-items-center">
                                    <div class="seat selected me-2"></div>
                                    <span>Đang chọn</span>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Sơ đồ ghế -->
                    <div class="seat-map" id="seatMap">
                        @{
                            var gheGroups = Model.LichChieu.PhongChieu.GheNgois.GroupBy(g => g.SoGhe.Substring(0, 1)).OrderBy(g => g.Key);
                        }
                        
                        @foreach (var row in gheGroups)
                        {
                            <div class="seat-row mb-2">
                                <div class="row-label">@row.Key</div>
                                <div class="seats">
                                    @foreach (var ghe in row.OrderBy(g => g.SoGhe))
                                    {
                                        var isOccupied = Model.GheDaDat.Contains(ghe.MaGhe);
                                        var cssClass = isOccupied ? "seat occupied" : "seat available";
                                        
                                        <div class="@cssClass" 
                                             data-seat-id="@ghe.MaGhe" 
                                             data-seat-number="@ghe.SoGhe"
                                             data-seat-price="@ghe.GiaGhe"
                                             title="Ghế @ghe.SoGhe - @ghe.GiaGhe.ToString("N0") VNĐ">
                                            @ghe.SoGhe.Substring(1)
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Thông tin đặt vé -->
    <div class="row mt-4">
        <div class="col-12">
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0">
                        <i class="fas fa-ticket-alt me-2"></i>Thông tin đặt vé
                    </h5>
                </div>
                <div class="card-body">
                    <div id="selected-seats-info" class="d-none">
                        <div class="row">
                            <div class="col-md-8">
                                <h6>Ghế đã chọn:</h6>
                                <div id="selected-seats-list"></div>
                            </div>
                            <div class="col-md-4 text-end">
                                <h6>Tổng tiền: <span id="total-price" class="text-success">0 VNĐ</span></h6>
                                <button type="button" class="btn btn-success" id="add-to-cart-btn">
                                    <i class="fas fa-shopping-cart me-1"></i>Thêm vào giỏ hàng
                                </button>
                            </div>
                        </div>
                    </div>
                    <div id="no-seats-selected" class="text-center text-muted">
                        <i class="fas fa-hand-pointer fa-2x mb-2"></i>
                        <p>Vui lòng chọn ghế để tiếp tục</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
.seat-map {
    max-width: 800px;
    margin: 0 auto;
}

.seat-row {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 10px;
}

.row-label {
    width: 30px;
    text-align: center;
    font-weight: bold;
    color: #666;
}

.seats {
    display: flex;
    gap: 5px;
}

.seat {
    width: 35px;
    height: 35px;
    border-radius: 8px 8px 0 0;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    font-size: 12px;
    font-weight: bold;
    transition: all 0.2s;
    border: 2px solid;
}

.seat.available {
    background-color: #e9ecef;
    border-color: #ced4da;
    color: #495057;
}

.seat.available:hover {
    background-color: #007bff;
    border-color: #007bff;
    color: white;
    transform: scale(1.1);
}

.seat.occupied {
    background-color: #dc3545;
    border-color: #dc3545;
    color: white;
    cursor: not-allowed;
}

.seat.selected {
    background-color: #28a745;
    border-color: #28a745;
    color: white;
    transform: scale(1.1);
}
</style>

@section Scripts {
    <script>
        let selectedSeats = [];
        const lichChieuId = '@Model.LichChieu.MaLichChieu';

        $(document).ready(function() {
            // Xử lý click ghế
            $('.seat.available').click(function() {
                const seatId = $(this).data('seat-id');
                const seatNumber = $(this).data('seat-number');
                const seatPrice = parseFloat($(this).data('seat-price'));

                if ($(this).hasClass('selected')) {
                    // Bỏ chọn ghế
                    $(this).removeClass('selected');
                    selectedSeats = selectedSeats.filter(seat => seat.id !== seatId);
                } else {
                    // Chọn ghế
                    $(this).addClass('selected');
                    selectedSeats.push({
                        id: seatId,
                        number: seatNumber,
                        price: seatPrice
                    });
                }

                updateSelectedSeatsInfo();
            });

            // Xử lý thêm vào giỏ hàng
            $('#add-to-cart-btn').click(function() {
                if (selectedSeats.length === 0) {
                    alert('Vui lòng chọn ít nhất một ghế');
                    return;
                }

                // Thêm từng ghế vào giỏ hàng
                let promises = [];
                selectedSeats.forEach(seat => {
                    const promise = $.ajax({
                        url: '@Url.Action("ThemVaoGio")',
                        method: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify({
                            MaLichChieu: lichChieuId,
                            MaGhe: seat.id
                        })
                    });
                    promises.push(promise);
                });

                Promise.all(promises)
                    .then(responses => {
                        const failedSeats = responses.filter(response => !response.success);
                        if (failedSeats.length > 0) {
                            alert('Một số ghế không thể thêm vào giỏ: ' + failedSeats.map(r => r.message).join(', '));
                        } else {
                            alert('Đã thêm ' + selectedSeats.length + ' vé vào giỏ hàng');
                            // Chuyển đến trang giỏ hàng
                            window.location.href = '@Url.Action("GioHang")';
                        }
                    })
                    .catch(error => {
                        alert('Có lỗi xảy ra khi thêm vào giỏ hàng');
                        console.error('Error:', error);
                    });
            });
        });

        function updateSelectedSeatsInfo() {
            if (selectedSeats.length > 0) {
                $('#selected-seats-info').removeClass('d-none');
                $('#no-seats-selected').addClass('d-none');

                // Cập nhật danh sách ghế
                const seatsList = selectedSeats.map(seat => 
                    `<span class="badge bg-primary me-1">${seat.number}</span>`
                ).join('');
                $('#selected-seats-list').html(seatsList);

                // Cập nhật tổng tiền
                const totalPrice = selectedSeats.reduce((sum, seat) => sum + seat.price, 0);
                $('#total-price').text(totalPrice.toLocaleString() + ' VNĐ');
            } else {
                $('#selected-seats-info').addClass('d-none');
                $('#no-seats-selected').removeClass('d-none');
            }
        }
    </script>
}
